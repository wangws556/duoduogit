
namespace YoYoStudio.ChatService.Client
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IChatService", CallbackContract = typeof(IChatServiceCallback), SessionMode = System.ServiceModel.SessionMode.Required)]
    public interface IChatService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/Login", ReplyAction = "http://tempuri.org/IChatService/LoginResponse")]
        YoYoStudio.Model.Core.User Login(int userId, string password, string macAddress);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/Login", ReplyAction = "http://tempuri.org/IChatService/LoginResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.User> LoginAsync(int userId, string password, string macAddress);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, IsTerminating = true, Action = "http://tempuri.org/IChatService/LogOff")]
        void LogOff();

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, IsTerminating = true, Action = "http://tempuri.org/IChatService/LogOff")]
        System.Threading.Tasks.Task LogOffAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/KeepAlive", ReplyAction = "http://tempuri.org/IChatService/KeepAliveResponse")]
        void KeepAlive();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/KeepAlive", ReplyAction = "http://tempuri.org/IChatService/KeepAliveResponse")]
        System.Threading.Tasks.Task KeepAliveAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/RoomLogin", ReplyAction = "http://tempuri.org/IChatService/RoomLoginResponse")]
        bool RoomLogin();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/RoomLogin", ReplyAction = "http://tempuri.org/IChatService/RoomLoginResponse")]
        System.Threading.Tasks.Task<bool> RoomLoginAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoomGroups", ReplyAction = "http://tempuri.org/IChatService/GetRoomGroupsResponse")]
        YoYoStudio.Model.Chat.RoomGroup[] GetRoomGroups();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoomGroups", ReplyAction = "http://tempuri.org/IChatService/GetRoomGroupsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Chat.RoomGroup[]> GetRoomGroupsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRooms", ReplyAction = "http://tempuri.org/IChatService/GetRoomsResponse")]
        YoYoStudio.Model.Chat.Room[] GetRooms();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRooms", ReplyAction = "http://tempuri.org/IChatService/GetRoomsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Chat.Room[]> GetRoomsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoles", ReplyAction = "http://tempuri.org/IChatService/GetRolesResponse")]
        YoYoStudio.Model.Core.Role[] GetRoles();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoles", ReplyAction = "http://tempuri.org/IChatService/GetRolesResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.Role[]> GetRolesAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoleCommands", ReplyAction = "http://tempuri.org/IChatService/GetRoleCommandsResponse")]
        YoYoStudio.Model.Core.RoleCommandView[] GetRoleCommands();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoleCommands", ReplyAction = "http://tempuri.org/IChatService/GetRoleCommandsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.RoleCommandView[]> GetRoleCommandsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetGiftGroups", ReplyAction = "http://tempuri.org/IChatService/GetGiftGroupsResponse")]
        YoYoStudio.Model.Chat.GiftGroup[] GetGiftGroups();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetGiftGroups", ReplyAction = "http://tempuri.org/IChatService/GetGiftGroupsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Chat.GiftGroup[]> GetGiftGroupsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetGifts", ReplyAction = "http://tempuri.org/IChatService/GetGiftsResponse")]
        YoYoStudio.Model.Chat.Gift[] GetGifts();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetGifts", ReplyAction = "http://tempuri.org/IChatService/GetGiftsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Chat.Gift[]> GetGiftsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetCommands", ReplyAction = "http://tempuri.org/IChatService/GetCommandsResponse")]
        YoYoStudio.Model.Core.Command[] GetCommands();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetCommands", ReplyAction = "http://tempuri.org/IChatService/GetCommandsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.Command[]> GetCommandsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetImages", ReplyAction = "http://tempuri.org/IChatService/GetImagesResponse")]
        YoYoStudio.Model.Core.ImageWithoutBody[] GetImages(int start, int count);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetImages", ReplyAction = "http://tempuri.org/IChatService/GetImagesResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.ImageWithoutBody[]> GetImagesAsync(int start, int count);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetImageCount", ReplyAction = "http://tempuri.org/IChatService/GetImageCountResponse")]
        int GetImageCount();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetImageCount", ReplyAction = "http://tempuri.org/IChatService/GetImageCountResponse")]
        System.Threading.Tasks.Task<int> GetImageCountAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetUserInfos", ReplyAction = "http://tempuri.org/IChatService/GetUserInfosResponse")]
        YoYoStudio.Model.Core.UserApplicationInfo[] GetUserInfos(int start, int count);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetUserInfos", ReplyAction = "http://tempuri.org/IChatService/GetUserInfosResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.UserApplicationInfo[]> GetUserInfosAsync(int start, int count);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetUserInfoCount", ReplyAction = "http://tempuri.org/IChatService/GetUserInfoCountResponse")]
        int GetUserInfoCount();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetUserInfoCount", ReplyAction = "http://tempuri.org/IChatService/GetUserInfoCountResponse")]
        System.Threading.Tasks.Task<int> GetUserInfoCountAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/Register", ReplyAction = "http://tempuri.org/IChatService/RegisterResponse")]
        YoYoStudio.Model.Core.User Register(YoYoStudio.Model.Core.UserIdList userIdList, string account, string password, int gender);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/Register", ReplyAction = "http://tempuri.org/IChatService/RegisterResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.User> RegisterAsync(YoYoStudio.Model.Core.UserIdList userIdList, string account, string password, int gender);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetUserIds", ReplyAction = "http://tempuri.org/IChatService/GetUserIdsResponse")]
        YoYoStudio.Model.Core.UserIdList[] GetUserIds();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetUserIds", ReplyAction = "http://tempuri.org/IChatService/GetUserIdsResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Core.UserIdList[]> GetUserIdsAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoomRoleCount", ReplyAction = "http://tempuri.org/IChatService/GetRoomRoleCountResponse")]
        int GetRoomRoleCount();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoomRoleCount", ReplyAction = "http://tempuri.org/IChatService/GetRoomRoleCountResponse")]
        System.Threading.Tasks.Task<int> GetRoomRoleCountAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoomRoles", ReplyAction = "http://tempuri.org/IChatService/GetRoomRolesResponse")]
        YoYoStudio.Model.Chat.RoomRole[] GetRoomRoles(int start, int count);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/GetRoomRoles", ReplyAction = "http://tempuri.org/IChatService/GetRoomRolesResponse")]
        System.Threading.Tasks.Task<YoYoStudio.Model.Chat.RoomRole[]> GetRoomRolesAsync(int start, int count);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/UpdateUser", ReplyAction = "http://tempuri.org/IChatService/UpdateUserResponse")]
        bool UpdateUser(YoYoStudio.Model.Core.User user);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/UpdateUser", ReplyAction = "http://tempuri.org/IChatService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(YoYoStudio.Model.Core.User user);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/UpdateUserHeaderImange", ReplyAction = "http://tempuri.org/IChatService/UpdateUserHeaderImangeResponse")]
        bool UpdateUserHeaderImange(YoYoStudio.Model.Core.Image theImage);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/UpdateUserHeaderImange", ReplyAction = "http://tempuri.org/IChatService/UpdateUserHeaderImangeResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserHeaderImangeAsync(YoYoStudio.Model.Core.Image theImage);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChatService/UpdateUser")]
        void UpdateUser(YoYoStudio.Model.Core.User user);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceCallback
    {

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChatService/UserLoggedIn")]
        void UserLoggedIn(YoYoStudio.Model.Core.User user);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChatService/UserLoggedOff")]
        void UserLoggedOff(int userId);

        [System.ServiceModel.OperationContractAttribute(IsOneWay = true, Action = "http://tempuri.org/IChatService/Receive")]
        void Receive(YoYoStudio.Model.Message message);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IChatService/RoomChanged", ReplyAction = "http://tempuri.org/IChatService/RoomChangedResponse")]
        void RoomChanged(YoYoStudio.Model.Chat.Room room);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : IChatService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.DuplexClientBase<IChatService>, IChatService
    {

        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) :
            base(callbackInstance)
        {
        }

        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) :
            base(callbackInstance, endpointConfigurationName)
        {
        }

        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) :
            base(callbackInstance, endpointConfigurationName, remoteAddress)
        {
        }

        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(callbackInstance, endpointConfigurationName, remoteAddress)
        {
        }

        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(callbackInstance, binding, remoteAddress)
        {
        }

        public YoYoStudio.Model.Core.User Login(int userId, string password, string macAddress)
        {
            return base.Channel.Login(userId, password, macAddress);
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.User> LoginAsync(int userId, string password, string macAddress)
        {
            return base.Channel.LoginAsync(userId, password, macAddress);
        }

        public void LogOff()
        {
            base.Channel.LogOff();
        }

        public System.Threading.Tasks.Task LogOffAsync()
        {
            return base.Channel.LogOffAsync();
        }

        public void KeepAlive()
        {
            base.Channel.KeepAlive();
        }

        public System.Threading.Tasks.Task KeepAliveAsync()
        {
            return base.Channel.KeepAliveAsync();
        }

        public bool RoomLogin()
        {
            return base.Channel.RoomLogin();
        }

        public System.Threading.Tasks.Task<bool> RoomLoginAsync()
        {
            return base.Channel.RoomLoginAsync();
        }

        public YoYoStudio.Model.Chat.RoomGroup[] GetRoomGroups()
        {
            return base.Channel.GetRoomGroups();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Chat.RoomGroup[]> GetRoomGroupsAsync()
        {
            return base.Channel.GetRoomGroupsAsync();
        }

        public YoYoStudio.Model.Chat.Room[] GetRooms()
        {
            return base.Channel.GetRooms();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Chat.Room[]> GetRoomsAsync()
        {
            return base.Channel.GetRoomsAsync();
        }

        public YoYoStudio.Model.Core.Role[] GetRoles()
        {
            return base.Channel.GetRoles();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.Role[]> GetRolesAsync()
        {
            return base.Channel.GetRolesAsync();
        }

        public YoYoStudio.Model.Core.RoleCommandView[] GetRoleCommands()
        {
            return base.Channel.GetRoleCommands();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.RoleCommandView[]> GetRoleCommandsAsync()
        {
            return base.Channel.GetRoleCommandsAsync();
        }

        public YoYoStudio.Model.Chat.GiftGroup[] GetGiftGroups()
        {
            return base.Channel.GetGiftGroups();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Chat.GiftGroup[]> GetGiftGroupsAsync()
        {
            return base.Channel.GetGiftGroupsAsync();
        }

        public YoYoStudio.Model.Chat.Gift[] GetGifts()
        {
            return base.Channel.GetGifts();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Chat.Gift[]> GetGiftsAsync()
        {
            return base.Channel.GetGiftsAsync();
        }

        public YoYoStudio.Model.Core.Command[] GetCommands()
        {
            return base.Channel.GetCommands();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.Command[]> GetCommandsAsync()
        {
            return base.Channel.GetCommandsAsync();
        }

        public YoYoStudio.Model.Core.ImageWithoutBody[] GetImages(int start, int count)
        {
            return base.Channel.GetImages(start, count);
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.ImageWithoutBody[]> GetImagesAsync(int start, int count)
        {
            return base.Channel.GetImagesAsync(start, count);
        }

        public int GetImageCount()
        {
            return base.Channel.GetImageCount();
        }

        public System.Threading.Tasks.Task<int> GetImageCountAsync()
        {
            return base.Channel.GetImageCountAsync();
        }

        public YoYoStudio.Model.Core.UserApplicationInfo[] GetUserInfos(int start, int count)
        {
            return base.Channel.GetUserInfos(start, count);
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.UserApplicationInfo[]> GetUserInfosAsync(int start, int count)
        {
            return base.Channel.GetUserInfosAsync(start, count);
        }

        public int GetUserInfoCount()
        {
            return base.Channel.GetUserInfoCount();
        }

        public System.Threading.Tasks.Task<int> GetUserInfoCountAsync()
        {
            return base.Channel.GetUserInfoCountAsync();
        }

        public YoYoStudio.Model.Core.User Register(YoYoStudio.Model.Core.UserIdList userIdList, string account, string password, int gender)
        {
            return base.Channel.Register(userIdList, account, password, gender);
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.User> RegisterAsync(YoYoStudio.Model.Core.UserIdList userIdList, string account, string password, int gender)
        {
            return base.Channel.RegisterAsync(userIdList, account, password, gender);
        }

        public YoYoStudio.Model.Core.UserIdList[] GetUserIds()
        {
            return base.Channel.GetUserIds();
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Core.UserIdList[]> GetUserIdsAsync()
        {
            return base.Channel.GetUserIdsAsync();
        }

        public int GetRoomRoleCount()
        {
            return base.Channel.GetRoomRoleCount();
        }

        public System.Threading.Tasks.Task<int> GetRoomRoleCountAsync()
        {
            return base.Channel.GetRoomRoleCountAsync();
        }

        public YoYoStudio.Model.Chat.RoomRole[] GetRoomRoles(int start, int count)
        {
            return base.Channel.GetRoomRoles(start, count);
        }

        public System.Threading.Tasks.Task<YoYoStudio.Model.Chat.RoomRole[]> GetRoomRolesAsync(int start, int count)
        {
            return base.Channel.GetRoomRolesAsync(start, count);
        }
<<<<<<< .mine

        public void UpdateUser(YoYoStudio.Model.Core.User user)
        {
            base.Channel.UpdateUser(user);
        }
=======

        public bool UpdateUser(YoYoStudio.Model.Core.User user)
        {
            return base.Channel.UpdateUser(user);
        }

        public System.Threading.Tasks.Task<bool> UpdateUserAsync(YoYoStudio.Model.Core.User user)
        {
            return base.Channel.UpdateUserAsync(user);
        }

        public bool UpdateUserHeaderImange(YoYoStudio.Model.Core.Image theImage)
        {
            return base.Channel.UpdateUserHeaderImange(theImage);
        }

        public System.Threading.Tasks.Task<bool> UpdateUserHeaderImangeAsync(YoYoStudio.Model.Core.Image theImage)
        {
            return base.Channel.UpdateUserHeaderImangeAsync(theImage);
        }
>>>>>>> .r1084
    }

}